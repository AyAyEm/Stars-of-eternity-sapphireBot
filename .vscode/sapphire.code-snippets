{
  "EternityCommand": {
    "scope": "typescript",
    "prefix": "command",
    "body": [
      "import { EternityCommand, EternityMessage } from '@lib';",
      "import { CommandOptions } from '@sapphire/framework';",
      "import { ApplyOptions } from '@sapphire/decorators';",
      "",
      "@ApplyOptions<CommandOptions>({",
      "  preconditions: [],",
      "})",
      "export default class extends EternityCommand {",
      "  public async run(msg: EternityMessage) {",
      "    $0",
      "  }",
      "}",
      ""
    ],
    "description": "Creates a sapphire Command"
  },
  "EternityCommandWSC": {
    "scope": "typescript",
    "prefix": "commandWSC",
    "body": [
      "import { EternityCommandWSC } from '@lib';",
      "import { ApplyOptions } from '@sapphire/decorators';",
      "",
      "import type { EternityCommandWSCOptions, EternityMessage } from '@lib';",
      "import type { Args } from '@sapphire/framework';",
      "",
      "@ApplyOptions<EternityCommandWSCOptions>({",
      "  preconditions: [],",
      "})",
      "export default class extends EternityCommandWSC {",
      "  public subCommands = {",
      "    default(msg: EternityMessage, args: Args) {",
      "      $0",
      "    },",
      "  };",
      "}",
      ""
    ],
    "description": "Creates a sapphire Command with sub commands"
  },
  "EternityEvent": {
    "scope": "typescript",
    "prefix": "event",
    "body": [
      "import { EternityEvent } from '@lib';",
      "import { Events } from '@sapphire/framework';",
      "import { ApplyOptions } from '@sapphire/decorators';",
      "",
      "import type { EventOptions } from '@sapphire/framework';",
      "",
      "@ApplyOptions<EventOptions>({ event: ${1:Events.${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}} })",
      "export default class extends EternityEvent<${1:Events.${TM_FILENAME_BASE/(.*)/${1:/camelcase}/g}}> {",
      "  public async run() {",
      "    $0",
      "  }",
      "}",
      ""
    ],
    "description": "Creates a sapphire Event"
  },
  "EternityPrecondition": {
    "scope": "typescript",
    "prefix": "precondition",
    "body": [
      "import { Precondition } from '@sapphire/framework';",
      "import { Message } from 'discord.js';",
      "",
      "export default class extends Precondition {",
      "",
      "  public run(message: Message) {",
      "    $0",
      "  }",
      "",
      "}",
      ""
    ],
    "description": "Creates a sapphire Precondition"
  },
  "EternityTask": {
    "scope": "typescript",
    "prefix": "task",
    "body": [
      "import { Task, TaskOptions } from '@lib/structures';",
      "import { ApplyOptions } from '@sapphire/decorators';",
      "",
      "@ApplyOptions<TaskOptions>({ time: 10000 })",
      "export default class extends Task {",
      "  public async run() {",
      "    $0",
      "  }",
      "}",
      ""
    ],
    "description": "Creates a saphire task"
  },
  "EternityArgument": {
    "scope": "typescript",
    "prefix": "argument",
    "body": [
      "import { Argument, ArgumentContext, PieceContext } from '@sapphire/framework';",
      "",
      "export class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Argument {",
      "  public constructor(context: PieceContext) {",
      "    super(context, { name: '${2:${TM_FILENAME_BASE/(.*)/${1:/downcase}/g}}' });",
      "  }",
      "",
      "  public async run(argument: string, context: ArgumentContext) {",
      "    $0",
      "  }",
      "}",
      ""
    ],
    "description": ""
  },
  "Import lib": {
    "scope": "typescript",
    "prefix": "@lib",
    "body": "import { $0 } from '@lib';"
  },
  "Import lib types": {
    "scope": "typescript",
    "prefix": "@lib:types",
    "body": "import type { $0 } from '@lib';"
  },
  "Import sapphire": {
    "scope": "typescript",
    "prefix": "@sapphire",
    "body": "import { $0 } from '@sapphire/${1|framework,decorators|}';"
  }
}
