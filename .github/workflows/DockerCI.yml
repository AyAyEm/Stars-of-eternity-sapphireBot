name: Docker CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  IMAGE: ghcr.io/${{ github.actor }}/stars-of-eternity-bot
  IMAGE_TAG: ghcr.io/${{ github.actor }}/stars-of-eternity-bot:${{ github.head_ref }}-${{ github.event.number }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: lowercase-env
        run: |
          echo ${{ env.IMAGE }} | tr '[:upper:]' '[:lower:]' | echo "IMAGE=$(</dev/stdin)" >> $GITHUB_ENV
          echo ${{ env.IMAGE_TAG }} | tr '[:upper:]' '[:lower:]' | echo "IMAGE_TAG=$(</dev/stdin)" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE_TAG }}-cache
          cache-to: type=registry,ref=${{ env.IMAGE_TAG }}-cache
          tags: |
            ${{ env.IMAGE }}:latest
            ${{ env.IMAGE_TAG }}
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: lowercase-env
        run: |
          echo ${{ env.IMAGE }} | tr '[:upper:]' '[:lower:]' | echo "IMAGE=$(</dev/stdin)" >> $GITHUB_ENV
          echo ${{ env.IMAGE_TAG }} | tr '[:upper:]' '[:lower:]' | echo "IMAGE_TAG=$(</dev/stdin)" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run linter
        run: docker container run --rm ${{ env.IMAGE_TAG }} npm run lint
