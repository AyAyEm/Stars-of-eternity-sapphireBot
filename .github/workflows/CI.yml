name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  IMAGE: ayayem/stars-of-eternity-bot
  TAG: ${{ github.event_name == 'pull_request' && format('{0}-{1}', github.head_ref, github.event.number) || github.sha }}
  IMAGE_TAG: ${{ format('{0}:{1}', env.IMAGE, env.TAG) }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          cache-from: type=registry,ref=ghcr.io/${{ env.IMAGE_TAG }}-cache
          cache-to: type=registry,ref=ghcr.io/${{ env.IMAGE_TAG }}-cache
          tags: ghcr.io/${{ env.IMAGE_TAG }}
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run linter
        run: docker container run --rm ghcr.io/${{ env.IMAGE_TAG }} npm run lint
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Login to DockerHub
        if: ${{ github.event_name == 'push' }}
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Pull image
        run: docker image pull ghcr.io/${{ env.IMAGE_TAG }}
      - name: Publish to docker
        if: ${{ github.event_name == 'push' }}
        run: |
          docker image tag ghcr.io/${{ env.IMAGE_TAG }} ${{ env.IMAGE_TAG }}
          docker image tag ghcr.io/${{ env.IMAGE_TAG }} ${{ env.IMAGE }}:latest
          docker image push -a ${{ env.IMAGE }}
      - name: Publish to ghcr
        run: |
          docker image tag ghcr.io/${{ env.IMAGE_TAG }} ghcr.io/${{ env.IMAGE }}:latest
          docker image push ghcr.io/${{ env.IMAGE }}:latest

