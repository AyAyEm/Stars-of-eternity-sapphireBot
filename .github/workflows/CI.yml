name: CI

on:
  pull_request:
  push:
    branches:
      - main

env:
  IMAGE_TAG: ${{ secrets.DOCKERHUB_USERNAME }}/stars-of-eternity-bot:${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and output
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ env.IMAGE_TAG }}
          cache-from: type=registry,ref=${{ env.IMAGE_TAG }}
          cache-to: type=registry,ref=${{ env.IMAGE_TAG }},mode=max
  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run linter
        run: docker container run --rm ${{ env.IMAGE_TAG }} npm run lint
  publish:
    if: ${{ github.event_name == 'push' }}
    runs-on: ubuntu-latest
    needs: [build, lint]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v1
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ayayem/stars-of-eternity-bot
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
